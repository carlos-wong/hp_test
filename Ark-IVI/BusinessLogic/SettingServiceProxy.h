/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp SettingService.xml -i SettingService.h -p SettingServiceProxy
 *
 * qdbusxml2cpp is Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef SETTINGSERVICEPROXY_H_1487224558
#define SETTINGSERVICEPROXY_H_1487224558

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface Local.DbusServer.DbusServer
 */
class LocalDbusServerDbusServerInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "Local.DbusServer.DbusServer"; }

public:
    LocalDbusServerDbusServerInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~LocalDbusServerDbusServerInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> setLanguage(int language)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(language);
        return asyncCallWithArgumentList(QLatin1String("setLanguage"), argumentList);
    }

    inline QDBusPendingReply<> synchronize()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("synchronize"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void onLanguageChange(int language);
};

namespace Local {
  namespace DbusServer {
    typedef ::LocalDbusServerDbusServerInterface DbusServer;
  }
}
#endif
